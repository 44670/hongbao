<!DOCTYPE html>
<html lang="en">
  <head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">

	<title>hongbao</title>

	<!-- Bootstrap core CSS -->
	<link href="http://cdn.bootcss.com/bootstrap/3.3.2/css/bootstrap.min.css" rel="stylesheet">
	<script src="http://cdn.bootcss.com/jquery/1.11.2/jquery.min.js"></script>
	<script src="http://cdn.bootcss.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
	<script src="/socket.io/socket.io.js"></script>
	<style type="text/css">
		.dot
		{
			background-color: Red;
		}
		td
		{
			background-color: Yellow;
			border: 1px solid #000000;
			width: 30px;
			height: 30px;
		}
		.car-dir-btn {
			width:100%;
		}
	</style>
  </head>

  <body>


	<div class="container">
		<label>在迷宫中寻找宝藏(T)吧！</label>
		<br/>
		提示：用键盘也可以操作。
		<br />
		<br />
		<div class="row">
			<div class="col-md-6" id="grid-div">
				<canvas id="canvas"></canvas>
			</div>
			<div class="col-md-6">
				<div class="row">
					<div class="col-xs-4 col-xs-offset-4"><button data-cmd="W" class="btn car-dir-btn btn-default btn-lg">W</button></div>
				</div>
				<br/>
				<div class="row">
					<div class="col-xs-4"><button data-cmd="A" class="btn car-dir-btn btn-default btn-lg">A</button></div>
					<div class="col-xs-4"><button data-cmd="S" class="btn car-dir-btn btn-default btn-lg">S</button></div>
					<div class="col-xs-4"><button data-cmd="D" class="btn car-dir-btn btn-default btn-lg">D</button></div>
				</div>
			</div>
		</div>

	</div>

	<script>
var Maze = {};
Maze.Direction = {
	N: 1,
	S: 2,
	E: 4,
	W: 8,
	opposite: {
		1: 2,
		2: 1,
		4: 8,
		8: 4
	},
	stepX: {
		1: 0,
		2: 0,
		4: 1,
		8: -1
	},
	stepY: {
		1: -1,
		2: 1,
		4: 0,
		8: 0
	},
};

var canvas, context;
var rowCount = 11, colCount = 11;

function start() {
	canvas = document.getElementById("canvas");
	context = canvas.getContext("2d");
}
	
function drawMaze(str) {
	var wallWidth = 2;
	var cellSize = 16;
	// var cellSize = 36;
	var width = cellSize * colCount;
	var height = cellSize * rowCount;
	var x = 10,
		y = 10;

	canvas.width = width + wallWidth + x * 2;
	canvas.height = height + wallWidth + y * 2;

	context.fillStyle = "#eeeeee";
	context.fillRect(0, 0, canvas.width, canvas.height);
	context.fillStyle = "#334466";
	context.strokeStyle = "#334466";
	context.font = "12px Arial";
	context.lineWidth = wallWidth;

	var map = str.split(',');
	var grid = [];
	for (var r = 0; r < rowCount; r++) {
		var arr = [];
		grid.push(arr);
		for (var c = 0; c < colCount; c++) {
			var pixel = map[r * colCount + c].split('|');
			var value = parseInt(pixel[0]);
			arr.push(value);
			var cx = c * cellSize + x;
			var cy = r * cellSize + y;
			if (!value) {
				context.fillRect(cx, cy, cellSize, cellSize);
				continue;
			}

			var left = (value & Maze.Direction.W) !== Maze.Direction.W;
			var top = (value & Maze.Direction.N) !== Maze.Direction.N;
			if (left) {
				context.fillRect(cx, cy, wallWidth, cellSize);
			}
			if (top) {
				context.fillRect(cx, cy, cellSize, wallWidth);
			} 
			var right = (value & Maze.Direction.E) !== Maze.Direction.E;
			var down = (value & Maze.Direction.S) !== Maze.Direction.S;
			if (right) {
				context.fillRect(cx + cellSize, cy, wallWidth, cellSize);
			}
			if (down) {
				context.fillRect(cx, cy + cellSize, cellSize, wallWidth);
			} 
			if (pixel[1] == 'E') {
				context.fillText("T", cx + cellSize * 1 / 3, cy + cellSize - 2);
			}
			
			var w = false;
			if (r > 0) {
				w = (grid[r - 1][c] & Maze.Direction.W) !== Maze.Direction.W;
			}
			if (w && c > 0) {
				w = (grid[r][c - 1] & Maze.Direction.N) !== Maze.Direction.N;
			}
			var ltc = w ? 1 : 0;
			if (ltc) {
				context.fillRect(cx, cy, wallWidth, wallWidth);
			}
		}
	}
	context.beginPath();
	var cx = (colCount - 1) / 2 * cellSize + x + (cellSize / 2);
	var cy = (rowCount - 1) / 2 * cellSize + y + (cellSize / 2);;
	context.arc(cx, cy, cellSize / 2, 0, 2 * Math.PI, false);	
	context.fillStyle = "#8ED6FF";	 
	context.fill();	  
}




start();

var socket = io();
socket.on('map', function(data) {
	drawMaze(data);
});

socket.on('msg', function(str) {
	alert(str);
});

function doWalk(key) {
	socket.emit('walk', key);
}

$('.car-dir-btn').click(function(e) {
	var cmd = $(e.delegateTarget).data('cmd');
	doWalk(cmd);
});

$(window).keydown(function(e) {
	var code = e.which;
	if (code >= 65 && code < 97) {
		var key = String.fromCharCode(code);
		if (key == 'W' || key == 'S' || key == 'A' || key == 'D') {
			doWalk(key);
		}
	}
});


		
	</script>
  </body>
</html>
